name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          echo "AWS credentials set."

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.3.0'

      - name: Set environment variables for Consul
        env:
          CONSUL_HTTP_ADDR: "https://8077-45-115-184-224.ngrok-free.app"  # Replace with your public URL
        run: |
          echo "Consul address set."


      - name: Terraform Init
        working-directory: infra/aws
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          terraform init  # Initialize Terraform and backend

      - name: Terraform Apply (AWS)
        working-directory: infra/aws
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          terraform apply -auto-approve  # Apply new infrastructure changes


      - name: Get AWS Public IP
        id: get_public_ip
        run: |
          public_ip=$(terraform output -raw public_ip | tr -d '\r\n'| sed -E 's/.*stdout: ([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+).*/\1/')
          echo "Retrieved Public IP: $public_ip"
          if [ -z "$public_ip" ]; then
            echo "Error: Public IP not found."
            exit 1
          fi
          echo "PUBLIC_IP=$public_ip" >> $GITHUB_ENV
        shell: bash
        working-directory: infra/aws

      - name: Update Ansible Inventory with Public IP
        run: |
          sed -i "s/{{ PUBLIC_IP }}/${{ env.PUBLIC_IP }}/g" ansible/inventory.ini

      - name: Debug private key
        run: |
          echo "Private key is being passed correctly."
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ls -l ~/.ssh  # List the files to verify the permissions


      - name: Set up SSH private key for Ansible
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.PUBLIC_IP }} >> ~/.ssh/known_hosts  # Add EC2 host to known hosts

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i ansible/inventory.ini ansible/playbook.yml --private-key=~/.ssh/id_rsa
